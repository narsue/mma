CREATE TABLE IF NOT EXISTS {}.school (super_user_id uuid, school_id uuid, stripe_id text, title text, description text, created_ts timestamp, deleted_ts timestamp, PRIMARY KEY (school_id));
CREATE TABLE IF NOT EXISTS {}.venue (venue_id uuid, school_id uuid, creator_user_id uuid, title text, description text, longitude decimal, latitude decimal, address text, postcode text, suburb text, street_no text, state text, country text, street_name text, google_maps_link text, contact_phone text, created_ts timestamp, deleted_ts timestamp, PRIMARY KEY (school_id, venue_id));
CREATE INDEX IF NOT EXISTS venue_deleted_index ON {}.venue (deleted_ts);
CREATE TABLE IF NOT EXISTS {}.user (user_id uuid, school_id uuid, email text, first_name text, surname text, gender text, phone text, dob text, image text, stripe_payment_method_id text, created_ts timestamp, email_verified boolean, photo_id text, address text, suburb text, emergency_name text, emergency_relationship text, emergency_phone text, emergency_medical text, belt_size text, uniform_size text, member_number text, contracted_until date, dev_stripe_customer_id text, prod_stripe_customer_id text, dev_stripe_payment_method_ids SET<text>, prod_stripe_payment_method_ids SET<text>, PRIMARY KEY (user_id));
CREATE TABLE IF NOT EXISTS {}.logged_user (logged_user_id uuid, school_user_ids SET<TUPLE<uuid,uuid>>, email text, password_hash text, email_verified boolean, created_ts timestamp, PRIMARY KEY (logged_user_id));
CREATE TABLE IF NOT EXISTS {}.club (club_id uuid, school_id uuid, title text, description text, deleted_ts timestamp, PRIMARY KEY (school_id, club_id));
CREATE INDEX IF NOT EXISTS club_deleted_index ON {}.club (deleted_ts);
CREATE TABLE IF NOT EXISTS {}.club_user (club_id uuid, user_id uuid, PRIMARY KEY (club_id, user_id));
CREATE INDEX IF NOT EXISTS logged_user_email_index ON {}.logged_user (email);
CREATE INDEX IF NOT EXISTS user_email_index ON {}.user (email);
CREATE INDEX IF NOT EXISTS user_school_index ON {}.user (school_id);
CREATE TABLE IF NOT EXISTS {}.club_class (club_id uuid, class_id uuid, PRIMARY KEY (club_id, class_id));
CREATE TABLE IF NOT EXISTS {}.user_permission (user_id uuid, club_id uuid, class_id uuid, permission int, created_ts timestamp, PRIMARY KEY (user_id, club_id, class_id, permission));
CREATE TABLE IF NOT EXISTS {}.waiver (school_id uuid, waiver_id uuid, title text, waiver text, created_ts timestamp, creator_user_id uuid, PRIMARY KEY (school_id, waiver_id));
CREATE TABLE IF NOT EXISTS {}.latest_waiver (school_id uuid, waiver_id uuid, style_id uuid, class_id uuid, club_id uuid, created_ts timestamp, PRIMARY KEY (school_id, style_id, class_id, club_id));
CREATE TABLE IF NOT EXISTS {}.signed_waiver (waiver_id uuid, style_id uuid, class_id uuid, club_id uuid, user_id uuid, accepted_ts timestamp, PRIMARY KEY (user_id, waiver_id, style_id, class_id, club_id));
CREATE TABLE IF NOT EXISTS {}.class (school_id uuid, class_id uuid, venue_id uuid, waiver_id uuid, capacity int, publish_mode int, price decimal, timezone text, notify_booking boolean, title text, description text, created_ts timestamp, end_ts timestamp, creator_user_id uuid, styles SET<uuid>, grades SET<uuid>, gender_req text, deleted_ts timestamp, free_lessons int, PRIMARY KEY (school_id, class_id));
CREATE INDEX IF NOT EXISTS class_deleted_index ON {}.class (deleted_ts);
CREATE TABLE IF NOT EXISTS {}.class_styles (class_id uuid, style_id uuid, PRIMARY KEY (class_id, style_id));
CREATE TABLE IF NOT EXISTS {}.class_grades (class_id uuid, grade_id uuid, PRIMARY KEY (class_id, grade_id));
CREATE TABLE IF NOT EXISTS {}.class_frequency (class_id uuid, class_frequency_id uuid, frequency int, start_date date, end_date date, start_time time, end_time time, PRIMARY KEY (class_id, class_frequency_id));
CREATE TABLE IF NOT EXISTS {}.instructor (user_id uuid, class_id uuid, permission int, created_ts timestamp, PRIMARY KEY (user_id, class_id));
CREATE TABLE IF NOT EXISTS {}.attendance (user_id uuid, class_id uuid, is_instructor boolean, class_start_ts timestamp, checkin_ts timestamp, PRIMARY KEY (class_id, class_start_ts, user_id));
CREATE TABLE IF NOT EXISTS {}.attendance_count (user_id uuid, class_id uuid, count int, PRIMARY KEY (class_id, user_id));
CREATE TABLE IF NOT EXISTS {}.style (school_id uuid, style_id uuid, title text, description text, created_ts timestamp, creator_user_id uuid, deleted_ts timestamp, PRIMARY KEY (school_id, style_id));
CREATE INDEX IF NOT EXISTS style_deleted_index ON {}.style (deleted_ts);
CREATE TABLE IF NOT EXISTS {}.grade (school_id uuid, grading_id uuid, title text, description text, attendance_req int, rank int, deleted_ts timestamp, PRIMARY KEY (school_id, grading_id));
CREATE TABLE IF NOT EXISTS {}.grading_requirement (school_id uuid, grading_requirement_id uuid, title text, description text, requirement int, deleted_ts timestamp, PRIMARY KEY (school_id, grading_requirement_id));
CREATE TABLE IF NOT EXISTS {}.user_style_grade (style_id uuid, user_id uuid, grading_id uuid, note text, created_ts timestamp, PRIMARY KEY (style_id, user_id, grading_id));
CREATE TABLE IF NOT EXISTS {}.session (session_token text, logged_user_id uuid, created_ts timestamp, expires_ts timestamp, ip_address text, user_agent text, is_active boolean, PRIMARY KEY (session_token, logged_user_id));
CREATE TABLE IF NOT EXISTS {}.forgotten_password_codes (email text, logged_user_id uuid, code text, expires_ts timestamp, created_ts timestamp, is_used boolean, PRIMARY KEY (email, code));
CREATE TABLE IF NOT EXISTS {}.sign_up_invite (email text, code text, expires_ts timestamp, first_name text, surname text, password_hash text, created_ts timestamp, is_used boolean, new_school boolean, school_id uuid, user_id uuid, PRIMARY KEY (email, code));